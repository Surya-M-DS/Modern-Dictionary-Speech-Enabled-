from tkinter import *
import sqlite3
from tkinter import messagebox as msg
import pyttsx3
from datetime import date


#===============================================================================================================================
#--------------------------------------------ADD A WORD-------------------------------------------------------------------------

engine = pyttsx3.init()



#---------------When clicking the Button to add---------------------

def add():
    
    def insert1():
        
        def dummy(w,m):
        
            con = sqlite3.connect('dictionary.db')
            cur = con.cursor()
            cur.execute('INSERT INTO dictionary values(?,?)',(w,m))
            con.commit()
            con.close()
            
            msg.showinfo(' A D D E D','Successfully Added !')
            
            window.destroy()

            
        dummy(addwordentry.get(),meaningtextbox.get('1.0',END))
        
#---------------When clicking Enter to add---------------------        
        
    def insert2(event):
        
        def dummy(w,m):
            
            con = sqlite3.connect('dictionary.db')
            cur = con.cursor()
            cur.execute('INSERT INTO dictionary values(?,?)',(w,m))
            con.commit()
            con.close()
            
            msg.showinfo(' A D D E D','Successfully Added !')
            
            window.destroy()
        
        dummy(addwordentry.get(),meaningtextbox.get(1.0,END))

        
                   
    
    #---------------------------------------------------------------------------------------------------------------------------
    
    window = Toplevel()

    window.title("M O D E R N     D I C T I O N  A R Y")
    window.geometry("800x600+260+60")
    window.resizable(False,False)
    window.configure(bg='black')
    
    addlabel = Label(window,text="A D D   A    N E W     W O R D    ",bg="#00ffff",fg="black",font="Times 15 bold",height=3)
    addlabel.pack(fill=X,padx=20,pady=20)

    wordaddlabel = Label(window,text='A D D   A   W O R D',bg="#00ffff",fg="black",font="Times 15 bold",bd=3,relief='raised',width=30)
    wordaddlabel.pack(pady=20)

    addwordentry = Entry(window,width=50,fg='black',font="cosmic 15 bold",justify='center')
    addwordentry.pack()
    addwordentry.bind('<Return>',insert2)

    meaningaddlabel = Label(window,text='A D D   M E A N I N G',bg="#00ffff",fg="black",font="Times 15 bold",bd=3,relief='raised',width=30)
    meaningaddlabel.place(x=220,y=350)

    meaningtextbox = Text(window,width=50,height=5,font='Times 15 bold',wrap='word')
    meaningtextbox.place(x=150,y=400)
    meaningtextbox.bind('<Return>',insert2)
    
    addbutton = Button(window,text='A D D',font='Times 15 bold',width=15,fg='white',bg='black',relief='raised',cursor='hand2',command=insert1)
    addbutton.pack(side='bottom',pady=15)
    
    window.mainloop()
    
#===============================================================================================================================
#--------------------------------------------FIND A WORD------------------------------------------------------------------------


#---------------When clicking the Button to search---------------------

def search1():
    
    if not wordentry.get():
        meaningtext.delete('1.0',END)
        state = "TRY adding a word first !"
        meaningtext.insert(END,state)
        
        text = meaningtext.get(1.0,END)
        voices = engine.getProperty('voices')
                
        def setvoice():
            print('inside setvoice')
            engine.setProperty('voice',voices[1].id)
            engine.setProperty('rate',150)
            engine.say(text)
            engine.runAndWait()
          
        setvoice()
        return state
    
    def dummy1(w):
        global wordentryvalue
        
        con = sqlite3.connect('dictionary.db')
        cur = con.cursor()
        cur.execute('SELECT meaning FROM dictionary where word=?',(w,))
        data = cur.fetchall()
        con.close()
        
        for lists in data:
            for record in lists:
                
                meaningtext.delete('1.0',END)
                meaningtext.insert(END,record)
                
            text = meaningtext.get(1.0,END)
            voices = engine.getProperty('voices')
            
            def setvoice():
                engine.setProperty('voice',voices[1].id)
                engine.setProperty('rate',150)
                engine.say(text)
                engine.runAndWait()
            setvoice()
            

                
        
    con = sqlite3.connect('dictionary.db')
    cur = con.cursor()
    cur.execute('SELECT word FROM dictionary')
    data = cur.fetchall()
    con.close()
    
    if data == []:
        meaningtext.delete('1.0',END)
        state = "No words currently Present in the Dictionary"
        meaningtext.insert(END,state)
        
        text = meaningtext.get(1.0,END)
        voices = engine.getProperty('voices')
            
        voices = engine.getProperty('voices')
            
        def setvoice():
            engine.setProperty('voice',voices[1].id)
            engine.say(text)
            engine.runAndWait()
                
        setvoice()
    
    for words in data:
        
        if wordentry.get() in words:
            wordentryvalue = wordentry.get()
            dummy1(wordentryvalue)
            break

            
        elif wordentry.get() not in words:
            state = f"Currently meaning of {wordentry.get()} is not present ! TRY ADDING in MAIN MENU"

            meaningtext.delete('1.0',END)
            meaningtext.insert(END,state)        
            
#------------When clicking Enter to search--------------------
    
def search2(event):
    
    
    if len(wordentry.get()) == 0:
        meaningtext.delete('1.0',END)
        state = 'TRY adding a word first !'
        meaningtext.insert(END,state)
        
                        
        text = meaningtext.get(1.0,END)
        voices = engine.getProperty('voices')
                
        def setvoice():
            engine.setProperty('voice',voices[1].id)
            engine.setProperty('rate',150)
            engine.say(text)
            engine.runAndWait()
          
        setvoice()
        return state
        
    
    def dummy1(w):
        global wordentryvalue
        
        con = sqlite3.connect('dictionary.db')
        cur = con.cursor()
        cur.execute('SELECT meaning FROM dictionary where word=?',(w,))
        data = cur.fetchall()
        con.close()
        
        for lists in data:
            for record in lists:
                
                meaningtext.delete('1.0',END)
                meaningtext.insert(END,record)
                
                text = meaningtext.get(1.0,END)
                voices = engine.getProperty('voices')
                
                def setvoice():
                    engine.setProperty('voice',voices[1].id)
                    engine.setProperty('rate',150)
                    engine.say(text)
                    engine.runAndWait()
                setvoice()
            
        
    con = sqlite3.connect('dictionary.db')
    cur = con.cursor()
    cur.execute('SELECT word FROM dictionary')
    data = cur.fetchall()
    con.close()
    
    if data == []:
        meaningtext.delete('1.0',END)
        state = "No words currently Present in the Dictionary"
        meaningtext.insert(END,state)
        
        text = meaningtext.get(1.0,END)
        voices = engine.getProperty('voices')
            
        voices = engine.getProperty('voices')
            
        def setvoice():
            engine.setProperty('voice',voices[1].id)
            engine.say(text)
            engine.runAndWait()
                
        setvoice()
    
    for words in data:
        
        if wordentry.get() in words:
            wordentryvalue = wordentry.get()
            dummy1(wordentryvalue)
            break

            
        elif wordentry.get() not in words:
            state = f"Currently meaning of {wordentry.get()} is not present ! TRY ADDING in MAIN MENU"

            meaningtext.delete('1.0',END)
            meaningtext.insert(END,state)
            
            text = meaningtext.get(1.0,END)
            voices = engine.getProperty('voices')

            
#===============================================================================================================================
#--------------------------------------------UPDATE A WORD----------------------------------------------------------------------

def update():
    
    global addewordentry1value
    global meaningtextbox1value
    
#------------When Updating using the Enter Key-------------------------

    def update1(event):
        
        def dummy(mean,wor):
            
            con = sqlite3.connect('dictionary.db')
            cur = con.cursor()
            cur.execute("UPDATE dictionary SET meaning=? where word=?",(mean,wor))
            con.commit()
            con.close()
            
            msg.showinfo('U P D A T E D','Successfully Updated !')
            
            main.destroy()
            

            
        dummy(meaningtextbox1.get('1.0',END),addwordentry1.get())
        
#------------When Updating using the Update Button------------------------

    def update2():
        
        global addewordentry1value
        global meaningtextbox1value
        
        def dummy(mean,wor):
            
            con = sqlite3.connect('dictionary.db')
            cur = con.cursor()
            cur.execute("UPDATE dictionary SET meaning=? where word=?",(mean,wor))
            con.commit()
            con.close()
            
            msg.showinfo('U P D A T E D','Successfully Updated !')
            
            main.destroy()
            
        dummy(meaningtextbox1.get('1.0',END),addwordentry1.get())
        
    #---------------------------------------------------------------------------------------------------------------------------
    main = Toplevel()

    main.title("M O D E R N     D I C T I O N  A R Y")
    main.geometry("800x600+260+60")
    main.resizable(False,False)
    main.configure(bg='black')


        
    addlabel1 = Label(main,text="U P D A T E    W O R D    A N D    M E A N I N G    ",bg="#00ffff",fg="black",font="Times 15 bold",height=3)
    addlabel1.pack(fill=X,padx=20,pady=20)

    wordaddlabel1 = Label(main,text='W O R D   TO    U P D A T E    ',bg="#00ffff",fg="black",font="Times 15 bold",bd=3,relief='raised',width=30)
    wordaddlabel1.pack(pady=20)
    
    addwordentry1value = None
    addwordentry1 = Entry(main,width=50,fg='black',font="cosmic 15 bold",justify='center')
    addwordentry1.pack()

    meaningaddlabel1 = Label(main,text='A D D   M E A N I N G',bg="#00ffff",fg="black",font="Times 15 bold",bd=3,relief='raised',width=30)
    meaningaddlabel1.place(x=220,y=350)
    
    meaningtextbox1value = None
    meaningtextbox1 = Text(main,width=50,height=5,font='Times 15 bold',wrap='word')
    meaningtextbox1.place(x=150,y=400)
    meaningtextbox1.bind('<Return>',update1)
    
    addbutton1 = Button(main,text='U P D A T E',font='Times 15 bold',width=20,fg='white',bg='black',relief='raised',cursor='hand2',bd=3,command=update2)
    addbutton1.pack(side='bottom',pady=15)
    
    main.mainloop()

    
    
    
    
    
#------------------------------------------DELETE ALL WORDS FROM DICTIONARY--------------------------------------

def delete():
    
    answer = msg.askquestion('DELETE','Are you sure to delete all the words in the Dictionary ?')
    
    if answer == 'yes':
        
        con = sqlite3.connect('dictionary.db')
        cur = con.cursor()
        cur.execute('DELETE FROM dictionary')
        con.commit()
        con.close()

        msg.showinfo('DELETED','All Words Deleted !')
    
#--------------------------------------CLEARS WORD AND MEANING ENTRY-------------------------------------------------

def clear():

    meaningtext.delete('1.0',END)
    wordentry.delete(0,END)
    
    
        
#===============================================================================================================================    
#-----------------------------------------------MAIN PPROGRAM------------------------------------------------------------------    

root = Tk()

root.title("M O D E R N     D I C T I O N  A R Y")
root.geometry("800x600+260+60")
root.resizable(False,False)
root.configure(bg='black')

#------------------DICTIONARY CREATION-----------------------------------

con = sqlite3.connect('dictionary.db')
cur = con.cursor()
cur.execute('CREATE TABLE IF NOT EXISTS dictionary(word TEXT, meaning TEXT)')
con.close()

#-----------------------------------------------Main----------------------------------------------------------------------------

toplabel = Label(root,text="M O D E R N     D I C T I O N A R Y    ",bg="#00ffff",fg="black",font="Times 15 bold",height=3,relief='groove')
toplabel.pack(fill=X,padx=20,pady=20)

mainmenulabel = Label(root,bg="#00ffff",fg="black",font="Times 15 bold",height=1,relief='groove')
mainmenulabel.pack(fill=X,padx=20,pady=20)

mbtn = Menubutton(mainmenulabel,text="Main Menu",font='Times 15 bold',bg='#00ffff',fg="black",bd=0,cursor="hand2",activebackground="#00ffff")
mbtn.pack(side=LEFT)
mbtn.menu = Menu(mbtn,tearoff=0,bg='black',fg='white',bd=0,activebackground="#ffc0cb",cursor='hand2')
mbtn["menu"] = mbtn.menu

mbtn.menu.add_command(label="Add a new Word",command=add,font="cosmic 10 ")
mbtn.menu.add_command(label="Update a Word",command=update,font="cosmic 10 ")
mbtn.menu.add_command(label="Exit",command=root.destroy,font="cosmic 10 ")

searchlabel = Label(root,text="S E A R C H   W O R D",fg='white',bg='black',font=" Times 15 bold ",bd=2,relief='groove',width=20)
searchlabel.place(x=20,y=200)

wordentryvalue = None
wordentry = Entry(root,font='cosmic 15 bold',fg='black',width=30)
wordentry.place(x=20,y=250)
wordentry.bind('<Return>',search2)

meaninglabel = Label(root,font='Times 15 bold',bd=3,fg='white',bg='black',relief='groove',text='M E A N I N G',width=20)
meaninglabel.place(x=375,y=325)

meaningtext = Text(root,font='cosmic 15 bold',fg='black',width=35,height=8,state='normal',wrap='word')
meaningtext.place(x=375,y=375)

searchbutton = Button(root,text='S E A R C H',fg='white',bg='black',font='Times 12 bold',relief='groove',command=search1,cursor='hand2')
searchbutton.place(x=130,y=290)

clearwords = Button(root,text='C L E A R   A L L',fg='white',bg='black',width=20,relief='groove',font='Times 13 bold',cursor='hand2',command=clear)
clearwords.place(x=40,y=400)

deletewords = Button(root,text='D E L E T E   A L L   W O R D S',font='Times 13 bold',relief='groove',width=25,fg='white',cursor='hand2',bg='black',command=delete)
deletewords.place(x=40,y=450)

today = date.today()
localday = today.strftime("%B %d, %Y")
day = Label(root,text=localday,font='Times 12 ',bg='black',fg='white')
day.place(x=625,y=105)


root.mainloop()